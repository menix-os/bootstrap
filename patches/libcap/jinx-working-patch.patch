diff -urN --no-dereference libcap-clean/libcap/cap_proc.c libcap-workdir/libcap/cap_proc.c
--- libcap-clean/libcap/cap_proc.c
+++ libcap-workdir/libcap/cap_proc.c
@@ -13,13 +13,24 @@
 #include <grp.h>
 #include <sys/prctl.h>
 #include <sys/securebits.h>
-#include <sys/syscall.h>
+// #include <sys/syscall.h>
 #include <unistd.h>
 #include <sys/types.h>
 #include <sys/wait.h>
 
 #include "libcap.h"
 
+#if defined(__menix__)
+
+#define SYS_capset -1
+#define SYS_prctl -1
+#define SYS_setuid -1
+#define SYS_setgid -1
+#define SYS_setgroups -1
+#define SYS_chroot -1
+
+#endif
+
 /*
  * libcap uses this abstraction for all system calls that change
  * kernel managed capability state. This permits the user to redirect
@@ -30,14 +41,22 @@
 static long int _cap_syscall3(long int syscall_nr,
 			      long int arg1, long int arg2, long int arg3)
 {
+#if defined(__menix__)
+    return ENOSYS;
+#else
     return syscall(syscall_nr, arg1, arg2, arg3);
+#endif
 }
 
 static long int _cap_syscall6(long int syscall_nr,
 			      long int arg1, long int arg2, long int arg3,
 			      long int arg4, long int arg5, long int arg6)
 {
+#if defined(__menix__)
+    return ENOSYS;
+#else
     return syscall(syscall_nr, arg1, arg2, arg3, arg4, arg5, arg6);
+#endif
 }
 
 /*
diff -urN --no-dereference libcap-clean/progs/capsh.c libcap-workdir/progs/capsh.c
--- libcap-clean/progs/capsh.c
+++ libcap-workdir/progs/capsh.c
@@ -18,6 +18,7 @@
 #define _GNU_SOURCE
 #endif
 
+#include <signal.h>
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
diff -urN --no-dereference libcap-clean/psx/psx.c libcap-workdir/psx/psx.c
--- libcap-clean/psx/psx.c
+++ libcap-workdir/psx/psx.c
@@ -24,12 +24,18 @@
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/syscall.h>
+// #include <sys/syscall.h>
 #include <sys/types.h>
 #include <unistd.h>
 
 #include "psx_syscall.h"
 
+#if defined(__menix__)
+
+#define syscall(...) (-1)
+
+#endif
+
 #ifdef _PSX_DEBUG_MEMORY
 
 static void *_psx_calloc(const char *file, const int line,
