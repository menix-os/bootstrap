diff -urN --no-dereference fastfetch-clean/CMakeLists.txt fastfetch-workdir/CMakeLists.txt
--- fastfetch-clean/CMakeLists.txt
+++ fastfetch-workdir/CMakeLists.txt
@@ -30,6 +30,8 @@
     set(DragonFly TRUE CACHE BOOL "..." FORCE)
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "SunOS")
     set(SunOS TRUE CACHE BOOL "..." FORCE)
+elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Menix")
+    set(Menix TRUE CACHE BOOL "..." FORCE)
 elseif(NOT APPLE AND NOT WIN32)
     message(FATAL_ERROR "Unsupported platform: ${CMAKE_SYSTEM_NAME}")
 endif()
@@ -1079,6 +1081,85 @@
         src/util/platform/FFPlatform_unix.c
         src/util/binary_linux.c
     )
+elseif(Menix)
+	list(APPEND LIBFASTFETCH_SRC
+		src/common/dbus.c
+		src/common/io/io_unix.c
+		src/common/netif/netif_linux.c
+		src/common/networking_linux.c
+		src/common/processing_linux.c
+		src/detection/battery/battery_nosupport.c
+		src/detection/bios/bios_nosupport.c
+		src/detection/bluetooth/bluetooth_nosupport.c
+		src/detection/bluetoothradio/bluetoothradio_nosupport.c
+		src/detection/board/board_nosupport.c
+		src/detection/bootmgr/bootmgr_nosupport.c
+		src/detection/brightness/brightness_nosupport.c
+		src/detection/btrfs/btrfs_nosupport.c
+		src/detection/chassis/chassis_nosupport.c
+		src/detection/cpu/cpu_nosupport.c
+		src/detection/cpucache/cpucache_nosupport.c
+		src/detection/cpuusage/cpuusage_nosupport.c
+		src/detection/cursor/cursor_nosupport.c
+		src/detection/disk/disk_nosupport.c
+		src/detection/dns/dns_linux.c
+		src/detection/physicaldisk/physicaldisk_nosupport.c
+		src/detection/physicalmemory/physicalmemory_nosupport.c
+		src/detection/diskio/diskio_nosupport.c
+		src/detection/font/font_nosupport.c
+		src/detection/host/host_nosupport.c
+		src/detection/initsystem/initsystem_linux.c
+		src/detection/keyboard/keyboard_linux.c
+		src/detection/libc/libc_linux.c
+		src/detection/lm/lm_linux.c
+		src/detection/loadavg/loadavg_nosupport.c
+		src/detection/locale/locale_linux.c
+		src/detection/gamepad/gamepad_linux.c
+		src/detection/media/media_linux.c
+		src/detection/memory/memory_linux.c
+		src/detection/mouse/mouse_linux.c
+		src/detection/netio/netio_linux.c
+		src/detection/opengl/opengl_linux.c
+		src/detection/os/os_menix.c
+		src/detection/packages/packages_linux.c
+		src/detection/poweradapter/poweradapter_linux.c
+		src/detection/processes/processes_linux.c
+		src/detection/gtk_qt/qt.c
+		src/detection/sound/sound_linux.c
+		src/detection/swap/swap_linux.c
+		src/detection/terminalfont/terminalfont_linux.c
+		src/detection/terminalshell/terminalshell_linux.c
+		src/detection/terminalsize/terminalsize_linux.c
+		src/detection/theme/theme_nosupport.c
+		src/detection/tpm/tpm_linux.c
+		src/detection/uptime/uptime_linux.c
+		src/detection/users/users_nosupport.c
+		src/detection/wallpaper/wallpaper_nosupport.c
+		src/detection/wifi/wifi_nosupport.c
+		src/detection/wm/wm_nosupport.c
+		src/detection/de/de_nosupport.c
+		src/detection/wmtheme/wmtheme_nosupport.c
+		src/detection/camera/camera_linux.c
+		src/detection/zpool/zpool_linux.c
+		src/util/platform/FFPlatform_unix.c
+		src/util/binary_linux.c
+		src/detection/displayserver/linux/displayserver_linux.c
+		src/detection/displayserver/linux/drm.c
+		src/detection/displayserver/linux/wayland/wayland.c
+		src/detection/displayserver/linux/wayland/global-output.c
+		src/detection/displayserver/linux/wayland/zwlr-output.c
+		src/detection/displayserver/linux/wayland/kde-output.c
+		src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c
+		src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c
+		src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c
+		src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c
+		src/detection/displayserver/linux/wmde.c
+		src/detection/displayserver/linux/xcb.c
+		src/detection/displayserver/linux/xlib.c
+		src/detection/gpu/gpu_nosupport.c
+		src/detection/localip/localip_linux.c
+		src/detection/icons/icons_nosupport.c
+	)
 endif()
 
 if(ENABLE_DIRECTX_HEADERS)
@@ -1189,6 +1270,8 @@
     target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE)
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-char-subscripts")
     set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/usr/X11R7/lib -Wl,-rpath,/usr/pkg/lib") # ditto
+elseif(Menix)
+    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE _ATFILE_SOURCE)
 endif()
 
 if(FreeBSD OR OpenBSD OR NetBSD)
diff -urN --no-dereference fastfetch-clean/src/detection/os/os_menix.c fastfetch-workdir/src/detection/os/os_menix.c
--- fastfetch-clean/src/detection/os/os_menix.c	1970-01-01 01:00:00.000000000 +0100
+++ fastfetch-workdir/src/detection/os/os_menix.c
@@ -0,0 +1,7 @@
+#include "os.h"
+
+void ffDetectOSImpl(FFOSResult* os)
+{
+    ffStrbufSetStatic(&os->name, "Menix");
+    ffStrbufSet(&os->version, &instance.state.platform.sysinfo.release);
+}
diff -urN --no-dereference fastfetch-clean/src/logo/ascii/menix.txt fastfetch-workdir/src/logo/ascii/menix.txt
--- fastfetch-clean/src/logo/ascii/menix.txt	1970-01-01 01:00:00.000000000 +0100
+++ fastfetch-workdir/src/logo/ascii/menix.txt
@@ -0,0 +1,21 @@
+**************************************
+**.................****             **
+**.................****             **
+**................********          **
+**................*********         **
+**...............*********          **
+**..............*****            *****
+**............******    **       *****
+**..........*******  ******   ********
+**.......***********  ****************
+*************** *****  ***************
+************      *  *********......**
+**********    **** ********.........**
+**    *****  ************...........**
+**    ****     ********.............**
+**              ******..............**
+**             ******...............**
+**             *****................**
+**         *********................**
+**         *********................**
+**************************************
diff -urN --no-dereference fastfetch-clean/src/logo/builtin.c fastfetch-workdir/src/logo/builtin.c
--- fastfetch-clean/src/logo/builtin.c
+++ fastfetch-workdir/src/logo/builtin.c
@@ -2809,6 +2809,16 @@
             FF_COLOR_FG_CYAN,
         },
     },
+    // Menix
+    {
+        .names = {"Menix"},
+        .lines = FASTFETCH_DATATEXT_LOGO_MENIX,
+        .colors = {
+            FF_COLOR_FG_RED,
+        },
+        .colorKeys = FF_COLOR_FG_RED,
+        .colorTitle = FF_COLOR_FG_YELLOW,
+    },
     // Meowix
     {
         .names = {"Meowix"},
diff -urN --no-dereference fastfetch-clean/src/options/general.h fastfetch-workdir/src/options/general.h
--- fastfetch-clean/src/options/general.h
+++ fastfetch-workdir/src/options/general.h
@@ -16,7 +16,7 @@
     bool detectVersion;
 
     // Module options that cannot be put in module option structure
-    #if defined(__linux__) || defined(__FreeBSD__) || defined(__sun) || defined(__OpenBSD__) || defined(__NetBSD__)
+    #if defined(__linux__) || defined(__FreeBSD__) || defined(__sun) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__menix__)
     FFstrbuf playerName;
     bool escapeBedrock;
     FFDsForceDrmType dsForceDrm;
diff -urN --no-dereference fastfetch-clean/src/util/FFstrbuf.h fastfetch-workdir/src/util/FFstrbuf.h
--- fastfetch-clean/src/util/FFstrbuf.h
+++ fastfetch-workdir/src/util/FFstrbuf.h
@@ -7,6 +7,7 @@
 #include <stdbool.h>
 #include <stdio.h>
 #include <string.h>
+#include <strings.h>
 #include <stdlib.h>
 #include <assert.h>
 
diff -urN --no-dereference fastfetch-clean/src/util/platform/FFPlatform_unix.c fastfetch-workdir/src/util/platform/FFPlatform_unix.c
--- fastfetch-clean/src/util/platform/FFPlatform_unix.c
+++ fastfetch-workdir/src/util/platform/FFPlatform_unix.c
@@ -19,7 +19,7 @@
 static void getExePath(FFPlatform* platform)
 {
     char exePath[PATH_MAX + 1];
-    #ifdef __linux__
+    #if defined(__linux__) || defined(__menix__)
         ssize_t exePathLen = readlink("/proc/self/exe", exePath, sizeof(exePath) - 1);
         exePath[exePathLen] = '\0';
     #elif defined(__APPLE__)
