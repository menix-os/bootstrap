diff -urN --no-dereference seatd-clean/common/drm.c seatd-workdir/common/drm.c
--- seatd-clean/common/drm.c
+++ seatd-workdir/common/drm.c
@@ -2,7 +2,7 @@
 #include <sys/ioctl.h>
 #include <sys/types.h>
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 #include <sys/sysmacros.h>
 #endif
 
@@ -24,7 +24,7 @@
 	return ioctl(fd, DRM_IOCTL_DROP_MASTER, 0);
 }
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 int path_is_drm(const char *path) {
 	static const char prefix[] = "/dev/dri/";
 	static const int prefixlen = STRLEN(prefix);
diff -urN --no-dereference seatd-clean/common/evdev.c seatd-workdir/common/evdev.c
--- seatd-clean/common/evdev.c
+++ seatd-workdir/common/evdev.c
@@ -3,7 +3,7 @@
 #include <sys/ioctl.h>
 #include <sys/types.h>
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 #include <linux/input.h>
 #include <linux/major.h>
 #include <sys/sysmacros.h>
@@ -27,7 +27,7 @@
 	return ioctl(fd, EVIOCREVOKE, NULL);
 }
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 int dev_is_evdev(dev_t device) {
 	return major(device) == INPUT_MAJOR;
 }
diff -urN --no-dereference seatd-clean/common/terminal.c seatd-workdir/common/terminal.c
--- seatd-clean/common/terminal.c
+++ seatd-workdir/common/terminal.c
@@ -8,7 +8,7 @@
 #include <sys/ioctl.h>
 #include <unistd.h>
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 #include <linux/kd.h>
 #include <linux/vt.h>
 #define K_ENABLE  K_UNICODE
@@ -126,7 +126,7 @@
 	path[offset++] = '\0';
 	return 0;
 }
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__menix__)
 static int get_tty_path(int tty, char path[static TTYPATHLEN]) {
 	assert(tty >= 0);
 	if (snprintf(path, TTYPATHLEN, "/dev/tty%d", tty) == -1) {
@@ -153,7 +153,7 @@
 }
 
 int terminal_current_vt(int fd) {
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 	struct vt_stat st;
 	int res = ioctl(fd, VT_GETSTATE, &st);
 	close(fd);
diff -urN --no-dereference seatd-clean/include/drm.h seatd-workdir/include/drm.h
--- seatd-clean/include/drm.h
+++ seatd-workdir/include/drm.h
@@ -5,7 +5,7 @@
 int drm_drop_master(int fd);
 int path_is_drm(const char *path);
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 #include <sys/types.h>
 int dev_is_drm(dev_t device);
 #endif
diff -urN --no-dereference seatd-clean/include/evdev.h seatd-workdir/include/evdev.h
--- seatd-clean/include/evdev.h
+++ seatd-workdir/include/evdev.h
@@ -4,7 +4,7 @@
 int evdev_revoke(int fd);
 int path_is_evdev(const char *path);
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 #include <sys/types.h>
 int dev_is_evdev(dev_t device);
 #endif
diff -urN --no-dereference seatd-clean/seatd/client.c seatd-workdir/seatd/client.c
--- seatd-clean/seatd/client.c
+++ seatd-workdir/seatd/client.c
@@ -24,7 +24,7 @@
 #include "terminal.h"
 
 static int get_peer(int fd, pid_t *pid, uid_t *uid, gid_t *gid) {
-#if defined(__linux__)
+#if defined(__linux__) || defined(__menix__)
 	struct ucred cred;
 	socklen_t len = sizeof cred;
 	if (getsockopt(fd, SOL_SOCKET, SO_PEERCRED, &cred, &len) == -1) {
