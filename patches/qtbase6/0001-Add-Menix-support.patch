From 8dc142ca5f0bbd5f5de57bdac1a593ebeac029c9 Mon Sep 17 00:00:00 2001
From: Dennis Bonke <admin@dennisbonke.com>
Date: Tue, 13 Feb 2024 04:48:28 +0100
Subject: [PATCH] Add Menix support

Signed-off-by: Dennis Bonke <admin@dennisbonke.com>
---
 cmake/QtMkspecHelpers.cmake                   |  6 ++
 cmake/QtPlatformSupport.cmake                 |  1 +
 mkspecs/common/menix.conf                  | 52 +++++++++++
 mkspecs/common/posix/qplatformdefs.h          |  4 +-
 mkspecs/menix-g++/qmake.conf               | 12 +++
 mkspecs/menix-g++/qplatformdefs.h          | 88 +++++++++++++++++++
 src/corelib/global/qsystemdetection.h         |  2 +
 src/corelib/io/qprocess_unix.cpp              |  4 +
 src/corelib/io/qstorageinfo_unix.cpp          |  3 +
 src/corelib/thread/qthread_unix.cpp           |  2 +-
 src/gui/configure.cmake                       |  4 +-
 src/network/kernel/qnetworkinterface_unix.cpp |  4 +
 12 files changed, 177 insertions(+), 5 deletions(-)
 create mode 100644 mkspecs/common/menix.conf
 create mode 100644 mkspecs/menix-g++/qmake.conf
 create mode 100644 mkspecs/menix-g++/qplatformdefs.h

diff --git a/cmake/QtMkspecHelpers.cmake b/cmake/QtMkspecHelpers.cmake
index a9612966..e39765e6 100644
--- a/cmake/QtMkspecHelpers.cmake
+++ b/cmake/QtMkspecHelpers.cmake
@@ -50,6 +50,12 @@ macro(qt_internal_setup_platform_definitions_and_mkspec)
         elseif(CLANG)
             set(QT_DEFAULT_MKSPEC linux-clang)
         endif()
+    elseif(MENIX)
+        if(GCC)
+            set(QT_DEFAULT_MKSPEC menix-g++)
+        else()
+            message(FATAL_ERROR "Unknown compiler in use!")
+        endif()
     elseif(ANDROID)
         if(GCC)
             set(QT_DEFAULT_MKSPEC android-g++)
diff --git a/cmake/QtPlatformSupport.cmake b/cmake/QtPlatformSupport.cmake
index 9f8498e4..4b95e3be 100644
--- a/cmake/QtPlatformSupport.cmake
+++ b/cmake/QtPlatformSupport.cmake
@@ -10,6 +10,7 @@ function(qt_set01 result)
 endfunction()
 
 qt_set01(LINUX CMAKE_SYSTEM_NAME STREQUAL "Linux")
+qt_set01(MENIX CMAKE_SYSTEM_NAME STREQUAL "Menix")
 qt_set01(HPUX CMAKE_SYSTEM_NAME STREQUAL "HPUX")
 qt_set01(ANDROID CMAKE_SYSTEM_NAME STREQUAL "Android")  # FIXME: How to identify this?
 qt_set01(INTEGRITY CMAKE_SYSTEM_NAME STREQUAL "Integrity") # FIXME: How to identify this?
diff --git a/mkspecs/common/menix.conf b/mkspecs/common/menix.conf
new file mode 100644
index 00000000..dfa52073
--- /dev/null
+++ b/mkspecs/common/menix.conf
@@ -0,0 +1,52 @@
+#
+# qmake configuration for common menix
+#
+
+QMAKE_PLATFORM         += menix
+
+include(unix.conf)
+
+QMAKE_CFLAGS_THREAD    += -D_REENTRANT
+QMAKE_CXXFLAGS_THREAD  += $$QMAKE_CFLAGS_THREAD
+QMAKE_LFLAGS_GCSECTIONS = -Wl,--gc-sections
+
+QMAKE_LFLAGS_REL_RPATH  = -Wl,-z,origin
+QMAKE_REL_RPATH_BASE    = $ORIGIN
+
+QMAKE_INCDIR            =
+QMAKE_LIBDIR            =
+QMAKE_INCDIR_X11        =
+QMAKE_LIBDIR_X11        =
+QMAKE_INCDIR_OPENGL     =
+QMAKE_LIBDIR_OPENGL     =
+QMAKE_INCDIR_OPENGL_ES2 = $$QMAKE_INCDIR_OPENGL
+QMAKE_LIBDIR_OPENGL_ES2 = $$QMAKE_LIBDIR_OPENGL
+QMAKE_INCDIR_EGL        =
+QMAKE_LIBDIR_EGL        =
+QMAKE_INCDIR_OPENVG     =
+QMAKE_LIBDIR_OPENVG     =
+
+QMAKE_LIBS              =
+QMAKE_LIBS_DYNLOAD      = -ldl
+QMAKE_LIBS_X11          = -lXext -lX11 -lm
+QMAKE_LIBS_EGL          = -lEGL
+QMAKE_LIBS_OPENGL       = -lGL
+QMAKE_LIBS_OPENGL_ES2   = -lGLESv2
+QMAKE_LIBS_OPENVG       = -lOpenVG
+QMAKE_LIBS_THREAD       = -lpthread
+QMAKE_LIBS_VULKAN       =
+
+QMAKE_INCDIR_WAYLAND    =
+QMAKE_LIBS_WAYLAND_CLIENT = -lwayland-client
+QMAKE_LIBS_WAYLAND_SERVER = -lwayland-server
+QMAKE_LIBDIR_WAYLAND    =
+QMAKE_DEFINES_WAYLAND   =
+QMAKE_WAYLAND_SCANNER   = wayland-scanner
+
+QMAKE_AR                = ar cqs
+QMAKE_OBJCOPY           = objcopy
+QMAKE_NM                = nm -P
+QMAKE_RANLIB            =
+
+QMAKE_STRIP             = strip
+QMAKE_STRIPFLAGS_LIB   += --strip-unneeded
\ No newline at end of file
diff --git a/mkspecs/common/posix/qplatformdefs.h b/mkspecs/common/posix/qplatformdefs.h
index e7ce7a56..97a6f4f1 100644
--- a/mkspecs/common/posix/qplatformdefs.h
+++ b/mkspecs/common/posix/qplatformdefs.h
@@ -12,7 +12,7 @@
 #endif
 #include <sys/stat.h>
 
-#if defined(QT_USE_XOPEN_LFS_EXTENSIONS) && defined(QT_LARGEFILE_SUPPORT)
+#if defined(QT_USE_XOPEN_LFS_EXTENSIONS) && defined(QT_LARGEFILE_SUPPORT) && !defined(__menix__)
 
 #define QT_STATBUF              struct stat64
 #define QT_FPOS_T               fpos64_t
@@ -105,7 +105,7 @@
 
 #if defined(QT_LARGEFILE_SUPPORT) \
         && defined(QT_USE_XOPEN_LFS_EXTENSIONS) \
-        && !defined(QT_NO_READDIR64)
+        && !defined(QT_NO_READDIR64) && !defined(__menix__)
 #define QT_DIRENT               struct dirent64
 #define QT_READDIR              ::readdir64
 #else
diff --git a/mkspecs/menix-g++/qmake.conf b/mkspecs/menix-g++/qmake.conf
new file mode 100644
index 00000000..6eb945c0
--- /dev/null
+++ b/mkspecs/menix-g++/qmake.conf
@@ -0,0 +1,12 @@
+#
+# qmake configuration for menix-g++
+#
+
+MAKEFILE_GENERATOR      = UNIX
+CONFIG                 += incremental
+QMAKE_INCREMENTAL_STYLE = sublib
+
+include(../common/linux.conf)
+include(../common/gcc-base-unix.conf)
+include(../common/g++-unix.conf)
+load(qt_config)
\ No newline at end of file
diff --git a/mkspecs/menix-g++/qplatformdefs.h b/mkspecs/menix-g++/qplatformdefs.h
new file mode 100644
index 00000000..91654548
--- /dev/null
+++ b/mkspecs/menix-g++/qplatformdefs.h
@@ -0,0 +1,88 @@
+/****************************************************************************
+**
+** Copyright (C) 2016 The Qt Company Ltd.
+** Contact: https://www.qt.io/licensing/
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see https://www.qt.io/terms-conditions. For further
+** information use the contact form at https://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 3 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL3 included in the
+** packaging of this file. Please review the following information to
+** ensure the GNU Lesser General Public License version 3 requirements
+** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 2.0 or (at your option) the GNU General
+** Public license version 3 or any later version approved by the KDE Free
+** Qt Foundation. The licenses are as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
+** included in the packaging of this file. Please review the following
+** information to ensure the GNU General Public License requirements will
+** be met: https://www.gnu.org/licenses/gpl-2.0.html and
+** https://www.gnu.org/licenses/gpl-3.0.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+// 1) need to reset default environment if _BSD_SOURCE is defined
+// 2) need to specify POSIX thread interfaces explicitly in glibc 2.0
+// 3) it seems older glibc need this to include the X/Open stuff
+#ifndef _GNU_SOURCE
+#  define _GNU_SOURCE
+#endif
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+// mlibc doesn't do features.h
+//#include <features.h>
+#include <pthread.h>
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#include <sys/shm.h>
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+#include <netinet/in.h>
+
+#define QT_USE_XOPEN_LFS_EXTENSIONS
+#include "../common/posix/qplatformdefs.h"
+
+#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE >= 500)
+#define QT_SNPRINTF             ::snprintf
+#define QT_VSNPRINTF            ::vsnprintf
+#endif
+
+#endif // QPLATFORMDEFS_H
diff --git a/src/corelib/global/qsystemdetection.h b/src/corelib/global/qsystemdetection.h
index 0cbcef27..35f6945f 100644
--- a/src/corelib/global/qsystemdetection.h
+++ b/src/corelib/global/qsystemdetection.h
@@ -129,6 +129,8 @@
 #  define Q_OS_VXWORKS
 #elif defined(__HAIKU__)
 #  define Q_OS_HAIKU
+#elif defined(__menix__)
+#  define Q_OS_MENIX
 #elif defined(__MAKEDEPEND__)
 #else
 #  error "Qt has not been ported to this OS - see http://www.qt-project.org/"
diff --git a/src/corelib/io/qprocess_unix.cpp b/src/corelib/io/qprocess_unix.cpp
index d9b672df..1f320518 100644
--- a/src/corelib/io/qprocess_unix.cpp
+++ b/src/corelib/io/qprocess_unix.cpp
@@ -40,6 +40,10 @@
 #include <termios.h>
 #include <unistd.h>
 
+#if !defined(_POSIX_PIPE_BUF) && defined(__menix__)
+#define _POSIX_PIPE_BUF 512
+#endif
+
 #if __has_include(<paths.h>)
 #  include <paths.h>
 #endif
diff --git a/src/corelib/io/qstorageinfo_unix.cpp b/src/corelib/io/qstorageinfo_unix.cpp
index b809a52f..cae9ff3c 100644
--- a/src/corelib/io/qstorageinfo_unix.cpp
+++ b/src/corelib/io/qstorageinfo_unix.cpp
@@ -53,6 +53,9 @@
 #elif defined(Q_OS_HAIKU)
 #  define QT_STATFSBUF struct statvfs
 #  define QT_STATFS    ::statvfs
+#elif defined(Q_OS_MENIX)
+#  define QT_STATFSBUF struct statvfs
+#  define QT_STATFS    ::statvfs
 #else
 #  if defined(QT_LARGEFILE_SUPPORT)
 #    define QT_STATFSBUF struct statvfs64
diff --git a/src/corelib/thread/qthread_unix.cpp b/src/corelib/thread/qthread_unix.cpp
index 14c6490c..05ad17a4 100644
--- a/src/corelib/thread/qthread_unix.cpp
+++ b/src/corelib/thread/qthread_unix.cpp
@@ -739,7 +739,7 @@ void QThread::start(Priority priority)
 
 
     if (d->stackSize > 0) {
-#if defined(_POSIX_THREAD_ATTR_STACKSIZE) && (_POSIX_THREAD_ATTR_STACKSIZE-0 > 0)
+#if defined(_POSIX_THREAD_ATTR_STACKSIZE) && (_POSIX_THREAD_ATTR_STACKSIZE-0 > 0) || defined(__menix__)
         int code = pthread_attr_setstacksize(&attr, d->stackSize);
 #else
         int code = ENOSYS; // stack size not supported, automatically fail
diff --git a/src/gui/configure.cmake b/src/gui/configure.cmake
index 0e53f512..09065aec 100644
--- a/src/gui/configure.cmake
+++ b/src/gui/configure.cmake
@@ -29,7 +29,7 @@ set_property(CACHE INPUT_libpng PROPERTY STRINGS undefined no qt system)
 
 #### Libraries
 qt_set01(X11_SUPPORTED LINUX OR HPUX OR FREEBSD OR NETBSD OR OPENBSD OR SOLARIS OR
-    HURD)
+    HURD OR MENIX)
 qt_find_package(ATSPI2 PROVIDED_TARGETS PkgConfig::ATSPI2 MODULE_NAME gui QMAKE_LIB atspi)
 qt_find_package(DirectFB PROVIDED_TARGETS PkgConfig::DirectFB MODULE_NAME gui QMAKE_LIB directfb)
 qt_find_package(Libdrm PROVIDED_TARGETS Libdrm::Libdrm MODULE_NAME gui QMAKE_LIB drm)
@@ -69,7 +69,7 @@ qt_find_package(GLESv2 PROVIDED_TARGETS GLESv2::GLESv2 MODULE_NAME gui QMAKE_LIB
 qt_find_package(Tslib PROVIDED_TARGETS PkgConfig::Tslib MODULE_NAME gui QMAKE_LIB tslib)
 qt_find_package(WrapVulkanHeaders PROVIDED_TARGETS WrapVulkanHeaders::WrapVulkanHeaders
     MODULE_NAME gui QMAKE_LIB vulkan MARK_OPTIONAL)
-if((LINUX) OR QT_FIND_ALL_PACKAGES_ALWAYS)
+if((LINUX OR MENIX) OR QT_FIND_ALL_PACKAGES_ALWAYS)
     qt_find_package(Wayland PROVIDED_TARGETS Wayland::Server MODULE_NAME gui QMAKE_LIB wayland_server)
     qt_find_package(Wayland PROVIDED_TARGETS Wayland::Client MODULE_NAME gui QMAKE_LIB wayland_client)
 endif()
diff --git a/src/network/kernel/qnetworkinterface_unix.cpp b/src/network/kernel/qnetworkinterface_unix.cpp
index 39ff8dbb..f702e384 100644
--- a/src/network/kernel/qnetworkinterface_unix.cpp
+++ b/src/network/kernel/qnetworkinterface_unix.cpp
@@ -21,6 +21,10 @@
 # include <ifaddrs.h>
 #endif
 
+#ifdef Q_OS_MENIX
+# include <linux/sockios.h>
+#endif
+
 #ifdef QT_LINUXBASE
 #  include <arpa/inet.h>
 #  ifndef SIOCGIFBRDADDR
-- 
2.45.2

